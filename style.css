html,
body {
	width: 100%;
	height: 100%;
	margin: 0;
	background-color: rgb(212, 207, 207);
}

body {
	display: flex;
	align-items: center;
	justify-content: center;
}


:root {
	--cube-length: 300px;
	--cube-layers: 4;
	--cube-step: calc(var(--cube-length)/(var(--cube-layers)-1));
	--cube-tx-0: 150px;
	--cube-tx-1: 50px;
	--cube-tx-2: -50px;
	--cube-tx-3: -150px;
}

.rubik {
	width: var(--cube-length);
	height: var(--cube-length);
	position: relative;
	transform-style: preserve-3d;
	transform: rotate3d(1,1,1,60deg);
}

.layer {
	position: absolute;
	top: 0px;
	left:0px;
	width: 100%;
	height: 100%;
}

.layerX.layer0 { transform: translateZ(var(--cube-tx-0)) rotateZ(-0.25turn) }
.layerX.layer1 { transform: translateZ(var(--cube-tx-1)) rotateZ(-0.25turn) }
.layerX.layer2 { transform: translateZ(var(--cube-tx-2)) rotateZ(-0.25turn) }
.layerX.layer3 { transform: translateZ(var(--cube-tx-3)) rotateZ(-0.25turn) scaleX(-1)}
.layerY.layer0 { transform: translateY(var(--cube-tx-0)) rotateX(-0.25turn) rotateZ(0.75turn) }
.layerY.layer1 { transform: translateY(var(--cube-tx-1)) rotateX(-0.25turn) }
.layerY.layer2 { transform: translateY(var(--cube-tx-2)) rotateX(-0.25turn) }
.layerY.layer3 { transform: translateY(var(--cube-tx-3)) rotateX(0.25turn) rotateZ(0.75turn) }
.layerZ.layer0 { transform: translateX(var(--cube-tx-0)) rotateY(-0.25turn) scaleX(-1)}
.layerZ.layer1 { transform: translateX(var(--cube-tx-1)) rotateY(-0.25turn) }
.layerZ.layer2 { transform: translateX(var(--cube-tx-2)) rotateY(-0.25turn) }
.layerZ.layer3 { transform: translateX(var(--cube-tx-3)) rotateY(-0.25turn) }

.layer {
	display: grid;
	grid-template-rows:    repeat(3, 1fr);
	grid-template-columns: repeat(3, 1fr);
}

.white  { background-color: white; }
.yellow { background-color: yellow; }
.orange { background-color: orange; }
.green  { background-color: green; }
.red    { background-color: red; }
.blue   { background-color: blue; }
.black  { background-color: black; }

.tile {
	border: 5px solid black;
	border-radius: 5px;
}